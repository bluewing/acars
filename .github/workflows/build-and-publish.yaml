name: Build and publish

on:
  release:
    types: [released]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # Checkout a copy of the repository code from the tag associated with the release that was just created.
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.release.tag_name }}

      # Login to the GitHub Container Registry.
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Generate the tags needed to publish the image. Note that step is identified by the ID "meta" so the output of
      # the step can be used to tag the docker image appropriately. Only two tags are generated from this step:
      #
      # 1. A semver tag, which aligns with the Git tag associated with the release, i.e. a git tag of "v1.2.3" will
      #    generate a docker tag of "1.2.3",
      # 2. A latest tag, which is automatically applied when using any `type=semver` tag declaration.
      #
      - name: Generate tags for docker image
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/bluewing/acars
          tags: |
            type=semver,pattern={{version}}

      # Build and push the docker image to ghcr.io with the provided tags, using the `acars.Dockerfile` to build the image.
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          file: acars.Dockerfile
